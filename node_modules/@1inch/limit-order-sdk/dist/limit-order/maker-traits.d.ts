import { Address } from '../address';
export declare class MakerTraits {
    private static ALLOWED_SENDER_MASK;
    private static EXPIRATION_MASK;
    private static NONCE_OR_EPOCH_MASK;
    private static SERIES_MASK;
    private static NO_PARTIAL_FILLS_FLAG;
    private static ALLOW_MULTIPLE_FILLS_FLAG;
    private static PRE_INTERACTION_CALL_FLAG;
    private static POST_INTERACTION_CALL_FLAG;
    private static NEED_CHECK_EPOCH_MANAGER_FLAG;
    private static HAS_EXTENSION_FLAG;
    private static USE_PERMIT2_FLAG;
    private static UNWRAP_WETH_FLAG;
    private value;
    constructor(val: bigint);
    static default(): MakerTraits;
    allowedSender(): string;
    withAllowedSender(sender: Address): this;
    withAnySender(): this;
    expiration(): bigint | null;
    withExpiration(expiration: bigint): this;
    nonceOrEpoch(): bigint;
    withNonce(nonce: bigint): this;
    withEpoch(series: bigint, epoch: bigint): this;
    series(): bigint;
    hasExtension(): boolean;
    withExtension(): this;
    isPartialFillAllowed(): boolean;
    disablePartialFills(): this;
    allowPartialFills(): this;
    setPartialFills(val: boolean): this;
    isMultipleFillsAllowed(): boolean;
    allowMultipleFills(): this;
    disableMultipleFills(): this;
    setMultipleFills(val: boolean): this;
    hasPreInteraction(): boolean;
    enablePreInteraction(): this;
    disablePreInteraction(): this;
    hasPostInteraction(): boolean;
    enablePostInteraction(): this;
    disablePostInteraction(): this;
    isEpochManagerEnabled(): boolean;
    isPermit2(): boolean;
    enablePermit2(): this;
    disablePermit2(): this;
    isNativeUnwrapEnabled(): boolean;
    enableNativeUnwrap(): this;
    disableNativeUnwrap(): this;
    asBigInt(): bigint;
    isBitInvalidatorMode(): boolean;
    private enableEpochManagerCheck;
    private setSeries;
}
