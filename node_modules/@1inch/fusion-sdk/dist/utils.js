"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.randBigInt = exports.getBytesCount = exports.add0x = exports.trim0x = exports.toBN = exports.toSec = void 0;
const assert_1 = __importDefault(require("assert"));
const validations_1 = require("./validations");
const bn_1 = require("./utils/bytes/bn");
function toSec(time) {
    const t = time instanceof Date ? time.getTime() : time;
    return Math.floor(+t / 1000);
}
exports.toSec = toSec;
function toBN(val) {
    if (typeof val === 'number') {
        if (!Number.isSafeInteger(val)) {
            throw new Error('integer is not safe');
        }
    }
    return new bn_1.BN(BigInt(val));
}
exports.toBN = toBN;
function trim0x(data) {
    if (data.startsWith('0x')) {
        return data.substring(2);
    }
    return data;
}
exports.trim0x = trim0x;
function add0x(data) {
    if (data.includes('0x')) {
        return data;
    }
    return '0x' + data;
}
exports.add0x = add0x;
function getBytesCount(hex) {
    (0, assert_1.default)((0, validations_1.isHexBytes)(hex), 'invalid hex');
    return BigInt(trim0x(hex).length / 2);
}
exports.getBytesCount = getBytesCount;
function randBigInt(max) {
    return BigInt(Math.floor(Math.random() * max));
}
exports.randBigInt = randBigInt;
//# sourceMappingURL=utils.js.map