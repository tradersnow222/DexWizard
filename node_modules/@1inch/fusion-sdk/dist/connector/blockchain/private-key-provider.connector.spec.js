"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts_mockito_1 = require("ts-mockito");
const limit_order_sdk_1 = require("@1inch/limit-order-sdk");
const private_key_provider_connector_1 = require("./private-key-provider.connector");
describe('Private Key provider connector', () => {
    let web3Provider;
    let privateKeyProviderConnector;
    const testPrivateKey = '0xd8d1f95deb28949ea0ecc4e9a0decf89e98422c2d76ab6e5f736792a388c56c7';
    const limitOrder = {
        salt: '618054093254',
        makerAsset: '0xe9e7cea3dedca5984780bafc599bd69add087d56',
        takerAsset: '0x111111111117dc0aa78b770fa6a738034120c302',
        maker: '0xfb3c7eb936cAA12B5A884d612393969A557d4307',
        receiver: '0x0000000000000000000000000000000000000000',
        makingAmount: '1000000000000000000',
        takingAmount: '1000000000000000000',
        makerTraits: '0'
    };
    const typedData = {
        primaryType: 'Order',
        types: {
            EIP712Domain: limit_order_sdk_1.EIP712Domain,
            Order: limit_order_sdk_1.Order
        },
        domain: {
            name: limit_order_sdk_1.LimitOrderV4TypeDataName,
            version: limit_order_sdk_1.LimitOrderV4TypeDataVersion,
            chainId: 1,
            verifyingContract: (0, limit_order_sdk_1.getLimitOrderContract)(1)
        },
        message: limitOrder
    };
    beforeEach(() => {
        web3Provider = (0, ts_mockito_1.mock)();
        privateKeyProviderConnector = new private_key_provider_connector_1.PrivateKeyProviderConnector(testPrivateKey, (0, ts_mockito_1.instance)(web3Provider));
    });
    it('should sign typed data by private key', async () => {
        const walletAddress = '0xa07c1d51497fb6e66aa2329cecb86fca0a957fdb';
        const signature = await privateKeyProviderConnector.signTypedData(walletAddress, typedData);
        expect(signature).toBe('0x8e1cbdc41ebb253aea91bfa41a028e735be4a5b25d93da0e3a6817070f40dcd31dfbc38bd3800ce2ff88089c77ca2f442dc84637006808aab0af00d966c917b11b');
    });
});
//# sourceMappingURL=private-key-provider.connector.spec.js.map