import { Address, EIP712TypedData, Extension, LimitOrderV4Struct, OrderInfoData } from '@1inch/limit-order-sdk';
import { FusionExtension } from './fusion-extension';
import { AuctionDetails } from './auction-details';
import { AuctionWhitelistItem, IntegratorFee } from './settlement-post-interaction-data';
import { AuctionCalculator } from '../auction-calculator';
export declare class FusionOrder {
    private static defaultExtra;
    readonly fusionExtension: FusionExtension;
    private inner;
    private constructor();
    get extension(): Extension;
    static new(settlementExtension: Address, orderInfo: OrderInfoData, details: {
        auction: AuctionDetails;
        fees?: {
            integratorFee?: IntegratorFee;
            bankFee?: bigint;
        };
        whitelist: AuctionWhitelistItem[];
    }, extra?: {
        unwrapWETH?: boolean;
        nonce?: bigint;
        permit?: string;
        allowPartialFills?: boolean;
        allowMultipleFills?: boolean;
        orderExpirationDelay?: bigint;
        enablePermit2?: boolean;
    }): FusionOrder;
    static fromDataAndExtension(order: LimitOrderV4Struct, extension: Extension): FusionOrder;
    build(): LimitOrderV4Struct;
    getOrderHash(domain?: import("@1inch/limit-order-sdk").EIP712DomainType): string;
    getTypedData(domain?: import("@1inch/limit-order-sdk").EIP712DomainType): EIP712TypedData;
    getCalculator(): AuctionCalculator;
}
