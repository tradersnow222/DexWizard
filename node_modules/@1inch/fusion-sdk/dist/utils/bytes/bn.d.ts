import { BitMask } from './bit-mask';
export declare class BN {
    readonly value: bigint;
    constructor(value: bigint);
    static fromNumber(n: number): BN;
    setBit(n: bigint, value: 1 | 0): BN;
    getBit(n: bigint): 1 | 0;
    shiftLeft(n: bigint): BN;
    shiftRight(n: bigint): BN;
    and(other: BN | bigint): BN;
    or(other: BN | bigint): BN;
    xor(other: BN | bigint): BN;
    isZero(): boolean;
    isOne(): boolean;
    getMask(mask: BitMask): BN;
    setMask(mask: BitMask, value: BN | bigint): BN;
    clearMask(mask: BitMask): BN;
    toHex(pad?: number): string;
    toNumber(): number;
}
